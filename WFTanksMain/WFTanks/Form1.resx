<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="EagleImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="timer2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>104, 17</value>
  </metadata>
  <metadata name="timer3.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>191, 17</value>
  </metadata>
</root>